# Locally added files

shell.nix:
    Nix env needed to build kythe with bazel.

cp-bin.sh:
    Puts build artifacts to a local dir.
    Note: those link to random libs in the current nix-shell, which can be
          GC'd away. So this is not a great option, should write a proper
          derivation instead (TODO).

# Notes

To compile Kythe:
  - in 'nix-shell' (uses shell.nix)
      - on first checkout, execute 'tools/modules/update.sh'

      - bazel build kythe/release
        - use 'bazel build -s' if anything goes wrong to see invocation details

      - if bazel complains about missing headers, then
        - 'bazel clean' and retry
        - if still, then wipe ~/.cache/bazel and retry.
        - note: this often happens when entering the nix-shell again, with old
          cached nix artifacts getting stale.

      - bazel build kythe/cxx/extractor/...
        - BUG? why isn't libncursesw.so.6 picked up? even added ncurses.dev to nix-shell packages. It seems to be in NIX_LDPATH.
          - See https://github.com/NixOS/nixpkgs/issues/54112.
          - Changed to link against -lncurses for now.

      - was using invoke-build.sh so it adds NIX_* env vars to --action_env
        - But this was buggy, env was lost in various ways (sometimes not
          propagated to host config, or through certain rules). Obsoleted
          by custom .bazelrc.

To crossref Kythe itself (TODO update):
  - bazel build kythe/go/serving/tools/... --experimental_action_listener kythe/go/extractors/cmd/bazel:extract_kzip_go
  - find and index the kzips
      - tree bazel-out/k8-fastbuild/extra_actions/kythe/go/extractors/cmd/bazel/extra_action/kythe/
      - ./bazel-bin/kythe/go/indexer/cmd/go_indexer/linux_amd64_stripped/go_indexer $(find kythe-kzips -name '*.kzip') | ...write_entries...
  - the xrefs don't seem to pick up kythe.io prefix, so things are not properly xrefd
    - AI: maybe open issue

